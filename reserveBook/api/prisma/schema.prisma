generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Book {
  id             Int      @id @default(autoincrement())
  title          String
  description    String?
  genre          Genre
  publishingDate DateTime
  createdAt      DateTime @default(now())
  updatedAt      DateTime @updatedAt
  pages          Int?
  publisher      String
  language       String
  authors        Author[] @relation("AuthorToBook")
  order          Order[]
}

model Author {
  id        Int      @id @default(autoincrement())
  firstName String
  lastName  String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  books     Book[]   @relation("AuthorToBook")
}

model User {
  id        Int      @id @default(autoincrement())
  firstName String
  lastName  String
  email     String   @unique
  password  String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  orders    Order[]
}

model Order {
  id         Int      @id @default(autoincrement())
  startDate  DateTime
  returnDate DateTime
  book       Book     @relation(fields: [bookId], references: [id])
  bookId     Int
  user       User     @relation(fields: [userId], references: [id])
  userId     Int
  createdAt  DateTime @default(now())
  updatedAt  DateTime @updatedAt
}

enum Genre {
  Art_Architecture
  Autobiography
  ActionAndAdventure
  AlternateHistory
  Anthology
  Biography
  Business_economics
  Children
  Crafts_hobbies
  Classic
  Cookbook
  ComicBook
  Diary
  ComingOfAge
  Dictionary
  Crime
  Encyclopedia
  Drama
  Guide
  Fairytale
  Health_fitness
  Fantasy
  History
  GraphicNovel
  HomeAndGarden
  HistoricalFiction
  Humor
  Horror
  Journal
  Mystery
  Math
  ParanormalRomance
  Memoir
  PictureBook
  Philosophy
  Poetry
  Prayer
  PoliticalThriller
  Romance
  Textbook
  Satire
  ScienceFiction
  Review
  ShortStory
  Science
  Suspense
  SelfHelp
  Thriller
  SportsAndLeisure
  Western
  Travel
  YoungAdult
  TrueCrime
}
